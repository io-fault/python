<?xml version="1.0" encoding="utf-8"?>
<!--
	# XML structures for text.
!-->
<grammar
 xmlns="http://relaxng.org/ns/structure/1.0"
 ns="http://if.fault.io/xml/text"
 datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
 xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">

	<define name="any">
		<element>
			<anyName/>
			<zeroOrMore>
				<choice>
					<attribute>
						<anyName/>
					</attribute>
					<text/>
					<ref name="any"/>
				</choice>
			</zeroOrMore>
		</element>
	</define>

	<define name="text.xmlid">
		<attribute name="xml:id">
			<data type="ID"/>
		</attribute>
	</define>

	<define name="xml.space">
		<attribute name="xml:space">
			<choice>
				<value>default</value>
				<value>preserve</value>
			</choice>
		</attribute>
	</define>

	<define name="book">
		<element name="book">
			<oneOrMore>
				<ref name="chapter"/>
			</oneOrMore>
		</element>
	</define>

	<define name="chapter">
		<element name="chapter">
			<optional>
				<ref name="head"/>
			</optional>

			<zeroOrMore>
				<ref name="section"/>
			</zeroOrMore>
		</element>
	</define>

	<start>
		<choice>
			<ref name="chapter"/>
			<ref name="book"/>
			<ref name="section"/>
		</choice>
	</start>

	<define name="structure.attributes">
		<!-- natural identifier for the structure -->
		<optional>
			<attribute name="identifier">
				<text/>
			</attribute>
		</optional>
	</define>

	<define name="text.paragraph.elements">
		<choice>
			<ref name="reference"/>
			<ref name="literal"/>
			<ref name="emphasis"/>
			<ref name="exception"/>
			<text/>
		</choice>
	</define>

	<define name="text">
		<zeroOrMore>
			<ref name="text.paragraph.elements"/>
		</zeroOrMore>
	</define>

	<define name="group">
		<optional>
			<attribute name="prefix">
				<text/>
			</attribute>
		</optional>

		<optional>
			<attribute name="suffix">
				<text/>
			</attribute>
		</optional>

		<ref name="text"/>
	</define>

	<define name="paragraph">
		<element name="paragraph">
			<optional>
				<attribute name="indentation">
					<data type="integer"/>
				</attribute>
			</optional>

			<ref name="text"/>
		</element>
	</define>

	<define name="cast">
		<optional>
			<attribute name="cast"><text/></attribute>
		</optional>
	</define>

	<define name="content">
		<zeroOrMore>
			<choice>
				<ref name="paragraph"/>
				<ref name="set"/>
				<ref name="sequence"/>
				<ref name="matrix"/>
				<ref name="dictionary"/>
				<ref name="literals"/>
			</choice>
		</zeroOrMore>
	</define>

	<define name="sequence">
		<element name="sequence">
			<zeroOrMore>
				<element name="item">
					<ref name="content"/>
				</element>
			</zeroOrMore>
		</element>
	</define>

	<define name="set">
		<element name="set">
			<zeroOrMore>
				<element name="item">
					<ref name="content"/>
				</element>
			</zeroOrMore>
		</element>
	</define>

	<define name="dictionary">
		<element name="dictionary">
			<zeroOrMore>
				<element name="item">
					<ref name="structure.attributes"/>

					<!-- require key before value -->
					<element name="key">
						<ref name="text"/>
					</element>

					<element name="value">
						<ref name="content"/>
					</element>
				</element>
			</zeroOrMore>
		</element>
	</define>

	<define name="matrix">
		<element name="matrix">
			<optional>
				<ref name="sequence"/>
			</optional>
			<choice>
				<zeroOrMore>
					<element name="cell">
						<ref name="text"/>
					</element>
				</zeroOrMore>
			</choice>
		</element>
	</define>

	<define name="head">
		<element name="section">
			<a:documentation>An untitled section at the start of a text document.</a:documentation>
			<optional>
				<ref name="text.xmlid"/>
			</optional>

			<optional>
				<ref name="content"/>
			</optional>
		</element>
	</define>

	<define name="section">
		<element name="section">
			<a:documentation>A titled section within the text document.</a:documentation>
			<optional>
				<ref name="text.xmlid"/>
			</optional>

			<attribute name="identifier">
				<!--
					# Required for named sections.
				!-->
				<text/>
			</attribute>
			<ref name="content"/>
		</element>
	</define>

	<define name="literals">
		<element name="literals">
			<a:documentation>A sequence of literal lines.</a:documentation>
			<ref name="cast"/>
			<zeroOrMore>
				<element name="line"><optional><text/></optional></element>
			</zeroOrMore>
		</element>
	</define>

	<define name="exception">
		<element name="exception">
			<attribute name="issue">
				<a:documentation>A description of the problem that occurred and </a:documentation>
				<text/>
			</attribute>
			<attribute name="line"><data type="integer"/></attribute>
			<text/>
		</element>
	</define>

	<define name="emphasis">
		<element name="emphasis">
			<attribute name="weight">
				<a:documentation>The resolution of the reference to perform if any.</a:documentation>
				<data type="integer"/>
			</attribute>
			<text/>
		</element>
	</define>

	<define name="plain">
		<element name="plain">
			<text/>
		</element>
	</define>

	<define name="literal">
		<element name="literal">
			<optional>
				<ref name="cast"/>
			</optional>
			<optional><text/></optional>
		</element>
	</define>

	<define name="reference">
		<element name="reference">
			<ref name="cast"/>

			<attribute name="source">
				<a:documentation>The original reference text.</a:documentation>
			</attribute>

			<optional>
				<attribute name="resolution">
					<a:documentation>The resolution of the reference to perform if any.</a:documentation>
					<text/>
				</attribute>
			</optional>

			<optional>
				<attribute name="priority">
					<a:documentation>
						The prioritized namespace to resolve the reference.
						Usually relative versus absolute.
					</a:documentation>
					<text/>
				</attribute>
			</optional>

			<optional>
				<attribute name="type">
					<choice>
						<value>normal</value>
						<value>hyperlink</value>
						<value>section</value>
					</choice>
				</attribute>
			</optional>

			<!--
				# Attributes in distinct namespaces.
			!-->
			<zeroOrMore>
				<a:documentation></a:documentation>
				<attribute>
					<anyName>
						<except>
							<nsName ns="http://if.fault.io/xml/text"/>
							<nsName ns=""/>
						</except>
					</anyName>
				</attribute>
			</zeroOrMore>

			<!-- Elements in distinct namespaces. -->
			<zeroOrMore>
				<choice>
					<ref name="any"/>
					<!-- The styled text to display. -->
					<ref name="text"/>
				</choice>
			</zeroOrMore>
		</element>
	</define>

</grammar>
