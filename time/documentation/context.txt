[ Glossary ]
============

/Horology
	The study of and measurement of time. (definition)

/Unit
	A unit of time. Normally, a typed quantity.

/Part
	A measure of a particular unit in a Time instance.
	Often with regards to a whole.

/Whole
	The unit that a selected part should be aligned to. Often, the of
	*keyword parameter* refers to a whole. In comments, it can be referred to
	as of-whole.

/Point
	A point in time, however, it is a misleading designation as Points in Time
	are always vectors. Essentially, they can be treated as Points or as Vectors.
	It is a scalar quantity relative to a datum and with
	a magnitude of no less than one unit of the scalar quantity.

/PiT
	Shorthand for: Point in Time.

/Subsecond
	Often, a reference to the precision of representation type.

/Representation Type
	An actual Python class representing a [unit] Type defined in a Time Context.

/Time Context
	An instance of &.core.Context managing the set of defined
	unit Types and any corresponding Representation Types.

/Canonical Position
	A PiT that is in the understood time zone that does not vary. Usually
	referring to UTC.

/Localization
	Referring to the process of localizing a timestamp to a particular time zone. Given a
	UTC timestamp, a localized version of the timestamp would be the timestamp adjusted by
	the offset identified by the specified &.zone.Zone.
	&.zone.Zone.localize.

/Normalization
	Referring the process of normalizing a localized timestamp to a particular time zone.
	Given a localized timestamp, a normalized version of the timestamp would be the
	timestamp adjusted to UTC and then localized. Normalization should be used when
	representing timestamps whose localized version has been manipulated.
	&.zone.Zone.normalize.

/Term
	Internal use only; a core unit. Units are associated as "like" terms by
	&.libunit.Context instances.
	In the default context, there are only two terms: days and months.

/Bridge
	Internal use only; a set of mappings that allow "unlike" terms to be
	converted. This is the infrastructure that provides a means to register
	the conversion methods for converting days to months and months to days.

/Type
	A particular unit of time in a Time Context. second, day, month are
	all types.

[ References ]
==============

The functionality and API choices of a number of datetime implementations were
analyzed during the development of chronometry:

	- Chronus-ST (http://chronos-st.org/)
	- SQL/Postgres' DATE, TIME, and TIMESTAMP types.
	- Python datetime
	- dateutils
	- mxDateTime
	- Datetime packages from java and ruby.

Wikipedia was, naturally, heavily referenced during the development of Chronometry.

	- &<http://en.wikipedia.org/wiki/Second>
	- &<http://en.wikipedia.org/wiki/Julian_year_(astronomy)>
